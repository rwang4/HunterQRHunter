Index: app/src/main/java/com/example/hunterqrhunter/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hunterqrhunter;\n\nimport static android.content.ContentValues.TAG;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ListView;\n\nimport com.example.hunterqrhunter.data.FbRepository;\nimport com.example.hunterqrhunter.model.QRCreature;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.DocumentSnapshot;\nimport com.google.firebase.firestore.FirebaseFirestore;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Objects;\nimport java.util.concurrent.atomic.AtomicReference;\n\npublic class MainActivity extends AppCompatActivity {\n\n\n    private FbRepository fb;\n\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n\n            setContentView(R.layout.activity_qr);\n            ListView listView = findViewById(R.id.qr_qr_comment_list);\n            Button addText = (Button) findViewById(R.id.qr_add_button);\n            Button scanned = (Button) findViewById(R.id.qr_scanned_number);\n            Button score = (Button) findViewById(R.id.qr_qr_score);\n            EditText editText = (EditText) findViewById(R.id.qr_add_comment);\n\n            Intent intent = getIntent();\n            int hashCode = intent.getIntExtra(\"HashCode\", 0);\n\n\n            FirebaseFirestore db = FirebaseFirestore.getInstance();\n            fb = new FbRepository(db);\n            ArrayList<String> commentList = new ArrayList<>();\n            ArrayAdapter<String> commentAdapter = new ArrayAdapter<String>((Context) this, R.layout.activity_qr_comment, commentList);\n            listView.setAdapter(commentAdapter);\n\n\n            DocumentReference docRef = db.collection(\"QR Creatures\").document(Integer.toString(hashCode));\n            docRef.get().addOnCompleteListener(task -> {\n                if (task.isSuccessful()) {\n                    DocumentSnapshot document = task.getResult();\n                    if (document.exists()) {\n                        QRCreature qrCreature = new QRCreature(hashCode);\n                        // set QR object\n                        qrCreature.setHashName((String) document.get(\"HashName\"));\n                        qrCreature.setHashImage((String) document.get(\"HashImage\"));\n                        qrCreature.setHashCode(((Long) Objects.requireNonNull(document.get(\"HashCode\"))).intValue());\n                        qrCreature.setScore(((Long) Objects.requireNonNull(document.get(\"Score\"))).intValue());\n                        qrCreature.setOwnedBy((ArrayList<String>) document.get(\"OwnedBy\"));\n                        qrCreature.setComments((ArrayList<String>) document.get(\"Comments\"));\n\n                        commentList.addAll(qrCreature.getComments());\n\n                        score.setText(Integer.toString(qrCreature.getScore()));\n                        scanned.setText(Integer.toString(qrCreature.getOwnedBy().size()));\n\n                        commentAdapter.notifyDataSetChanged();\n\n\n                        // here you can use the callback function to do the work with the get QR.\n                        Log.d(TAG, \"DocumentSnapshot data: \" + document.getData());\n\n                    } else {\n                        Log.d(TAG, \"No such document\");\n                    }\n                } else {\n                    Log.d(TAG, \"get failed with \", task.getException());\n                }\n            });\n            addText.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    String newComment = editText.getText().toString();\n                    if (!newComment.isEmpty()) {\n                        commentList.add(newComment);\n                    }\n                    commentAdapter.notifyDataSetChanged();\n                    fb.updateQRComments(hashCode, commentList);\n                }\n            });\n        }\n    }\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hunterqrhunter/MainActivity.java b/app/src/main/java/com/example/hunterqrhunter/MainActivity.java
--- a/app/src/main/java/com/example/hunterqrhunter/MainActivity.java	(revision 649c2f1327e63d98711c2a841eeda720cb7aa5d0)
+++ b/app/src/main/java/com/example/hunterqrhunter/MainActivity.java	(date 1680317607340)
@@ -28,13 +28,14 @@
 public class MainActivity extends AppCompatActivity {
 
 
+    public static final int ACTIVITY_QR = R.layout.activity_qr;
     private FbRepository fb;
 
         @Override
         protected void onCreate(Bundle savedInstanceState) {
             super.onCreate(savedInstanceState);
 
-            setContentView(R.layout.activity_qr);
+            setContentView(ACTIVITY_QR);
             ListView listView = findViewById(R.id.qr_qr_comment_list);
             Button addText = (Button) findViewById(R.id.qr_add_button);
             Button scanned = (Button) findViewById(R.id.qr_scanned_number);
